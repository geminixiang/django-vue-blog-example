services:
  migrate:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    depends_on:
      db:
        condition: service_healthy
    restart: no
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings
    command: ["python", "manage.py", "migrate"]

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.dev
    volumes:
      - backend_static:/app/static
      - backend_media:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DJANGO_SETTINGS_MODULE=app.settings
    depends_on:
      - db
    command: python manage.py runserver 0.0.0.0:8000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
    command: npm run dev

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=example
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  backend_static:
  backend_media:
